<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>少年游</title>
  
  <subtitle>茫茫人海，却似荒野</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://shelah-kuang.github.io/"/>
  <updated>2019-06-18T13:44:55.922Z</updated>
  <id>http://shelah-kuang.github.io/</id>
  
  <author>
    <name>kuangsl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数论基础及数论算法</title>
    <link href="http://shelah-kuang.github.io/2019/06/18/%E6%95%B0%E8%AE%BA%E5%9F%BA%E7%A1%80%E5%8F%8A%E6%95%B0%E8%AE%BA%E7%AE%97%E6%B3%95/"/>
    <id>http://shelah-kuang.github.io/2019/06/18/数论基础及数论算法/</id>
    <published>2019-06-18T13:44:55.000Z</published>
    <updated>2019-06-18T13:44:55.922Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>群论基础</title>
    <link href="http://shelah-kuang.github.io/2019/06/18/%E7%BE%A4%E8%AE%BA%E5%9F%BA%E7%A1%80/"/>
    <id>http://shelah-kuang.github.io/2019/06/18/群论基础/</id>
    <published>2019-06-18T07:11:04.000Z</published>
    <updated>2019-06-18T13:44:17.925Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考书籍：</p><ol><li><a href="http://www.phy.pku.edu.cn/~xzli/teaching.html" target="_blank" rel="noopener">群论-李新征讲义</a></li><li>Thomas Judson: Abstract Algebra - Theory and Applications, 2018.</li></ol></blockquote><h2 id="群"><a href="#群" class="headerlink" title="群"></a>群</h2><p> <strong><code>群</code></strong>：设𝐆是一些元素（操作）的集合，记为𝐆 = {⋯，g，⋯}，在𝐆中定义了乘运算，如果𝐆中元素对这种运算满足下面四个条件：<br>1) 封闭性：∀两个元素（操作）的乘积仍属于这类元素（操作）的集合<br>2) 结合律：对∀三个元素（操作）𝐟、𝐠、𝐡，有(𝐟𝐠)𝐡 = 𝐟(𝐠𝐡)<br>3) 有唯一单位元素 e，使得对∀𝐟 ∈ 𝐆，有𝐞𝐟 = 𝐟𝐞 = 𝐟<br>4) 对∀𝐟 ∈ 𝐆，存在且唯一存在$𝐟^{−𝟏}$属于 G，使$𝐟^−𝟏𝐟$ = $ 𝐟𝐟^{−𝟏} $ = 𝐞；<br>这时我们称𝐆是一个群，其中元素是群元，𝐞为其单位元素，$𝐟^{−𝟏}$为𝐟的逆。 </p><p><strong><code>有限群</code></strong>： 群内元素的个数称为群的阶，群阶有限时称为有限群</p><p><strong><code>Abel群</code></strong>：群内的运算可以互换（可以看出abel群的乘法表都是关于对角线对称的）</p><p><strong><code>重排定理</code></strong>：设𝐆 = {⋯，$𝐠{𝛂}$，⋯}，对∀𝐮 ∈ 𝐆，当$ 𝐠<em>𝛂 $取遍𝐆中所有元素时，$𝐮𝐠</em>𝛂$给出且仅仅一次给出𝐆中所有元素。 </p><h2 id="子群与陪集"><a href="#子群与陪集" class="headerlink" title="子群与陪集"></a>子群与陪集</h2><p><strong><code>子群</code></strong>：设 H 是群 G 的一个子集（部分元素的集合），若对群 G 相同的乘法运算，H 也构成一个群，则称 H 为 G 的子群。<br>要证明一个群为子群，只需要证明其封闭性与每个元素唯一逆即可，单位元可以通过封闭性得证，结合律必然成立 </p><p><strong><code>n 阶循环群</code></strong>：它的定义是$a^n = e$，由${a、a^2、⋯ 、a^{n−1}、a^n = e}$组成。这样的群是 Abel 群，乘法可易。</p><p><strong><code>群元的阶</code></strong>：对任意一个有限群𝐆，从中取一个元素𝐚，从𝐚出发作幂操作，总是可以构成𝐆的一个循环子群$𝐙_𝐤$的，这个𝐙𝐤等于${𝐚、𝐚^𝟐、 ⋯、𝐚^{𝐤−𝟏}、𝐚^𝐤 = 𝐞}$，这时称𝐤（满足这个性质的最小的𝐤）为群元𝐚的阶。 </p><p><strong><code>陪集</code></strong>：设𝐇是群𝐆的子群，𝐇 = {$𝐡<em>𝛂$}，由固定的𝐠 ∈ 𝐆，可生成子群𝐇的左陪集：$𝐠𝐇 = {𝐠𝐡</em>𝛂|𝐡<em>𝛂 ∈ 𝐇}$，也可生成子群𝐇的右陪集：𝐇𝐠 = {$𝐡</em>𝛂𝐠|𝐡_𝛂 ∈ 𝐇$}。</p><p><strong><code>陪集定理</code></strong>：设群𝐇是群𝐆的子群，则𝐇的两个左（或右）陪集或者完全相同，或者没有任何公共元素。 </p><p><strong><code>拉格朗日（Lagrange）定理</code></strong>：有限群子群的阶，必为群阶的因子。 </p><h2 id="类与不变子群"><a href="#类与不变子群" class="headerlink" title="类与不变子群"></a>类与不变子群</h2><p><strong><code>共轭</code></strong>：所谓共轭，指的是群𝐆中两个元素𝐟、𝐡，如果在𝐆中存在一个𝐠，使得𝐟、𝐡可以通过$𝐠𝐟𝐠^{−𝟏} = 𝐡$联系起来，则称𝐟、𝐡共轭，记为𝐟~𝐡。 </p><p><strong><code>类</code></strong>：群 G 中所有相互共轭的元素形成的集合，称为群 G 的一个类。<br>1) 一个群中的单位元素自成一类，因为对任意 f 属于 G，$fef^{−1} = e$；<br>2) Abel 群的所有元素都自成一类，因为对任意 f 属于 G，取任意 h 属于 G，$hfh^{−1} = hh^{−1}f = f$；<br>3) 设群元素 f 的阶为 m，即$f^m = e$，则与它同类的元素的阶也为 m</p><p>定理 1.4 有限群的每个类中元素的个数都是群阶的因子。 </p><p><strong><code>共轭子群</code></strong>：设 H 和 K 是群 G 的两个子群，若存在 g 属于 G，使得$𝐊 =𝐠𝐇𝐠^{−𝟏} = {𝐠𝐡𝐠^{−𝟏}|𝐡 ∈ 𝐇}$。这时，称 H 和 K 是共轭子群</p><p><strong><code>正规子群</code></strong>：设 H 是 G 的子群，如果 H 中所有元素的同类元素都属于 H，则称 H是 G 的不变子群（数学上一般称为正规子群）。</p><p>定理 1.5 设 H 是 G 的不变子群，那么对任意固定的 f 属于 G，当$h_α$取遍 H 中所有元素的时候，$fh_αf^{−1}$给出且仅仅一次给出 H 中所有元素<br>实际上，所有 Abel 群的子群都是其不变子群。因为每个元素自成一类，其同类元素自然在这个子群中</p><p>定理 1.6 不变子群的左陪集与右陪集是重合的。<br>不变子群的陪集还有另外一个更加重要的性质，就是两个（非子群的）不同陪集中元素的乘积，必为第三个陪集中的元素。这个说的是什么呢？就是H是G的不变子群，由H，可将G分解为G={g0H、g1H、g2H、…}。这样的话在这一系列的陪集中，取giH与gjH这两个陪集中的元素gihα与gjhβ相乘，结果是这样的：当giH与gjH都不是g0H时，必属于giH与gjH外的另一个陪集；当giH、gjH其中一个是g0H时，必属于giH与gjH中的另一个；giH与gjH都是g0H时，必属于g0H。</p><p><img src="/2019/06/18/群论基础/shanqun.png" alt="shanqun"></p><h2 id="同态与同构"><a href="#同态与同构" class="headerlink" title="同态与同构"></a>同态与同构</h2><p><strong><code>同构映射</code></strong>：若从群 G 到群 F 上，存在一一对应的满映射$\Phi$，且这个映射本身保持群的乘法运算规律不变，也就是说 G 中两个元素乘积的映射，等于群 G 中两个元素映射的乘积，则称群 G 与群 F 同构，记作 G≅F。映射$\Phi$ 称为同构映射。</p><p>群 G 的两个互为共轭的子群H与K，由定义，是存在一个固定的 g 属于 G，使得对任意的hα ∈ H，都有$k_α = gh_αg^{−1} \in K$与之对应。这个对应关系是一对一的，同时单位元素对应单位元素，互逆元素对应互逆元素。所以同一个群的两个共轭子群同构。</p><p><strong><code>同态</code></strong>：设存在从群 G 到群 F 的满映射（注意，没有一对一了）𝚽，且这个映射本身保持群的乘法运算规律不变，也就是说G中两个元素乘积的映射，等于群 G 中两个元素映射的乘积，则称群 G 与群 F 同态，记作 G~F。映射𝚽称为同态映射。 </p><p>同态核：设 G 与 F 同态，那么 G 中与 F 的单位元素对应的所有元素的集合称为同态核。</p><p> （同态核定理）设 G 与 F 同态，则有：<br>1) 同态核 H 是 G 的不变子群；<br>2) 商群 G/H 与 F 同构。 </p><p><img src="/2019/06/18/群论基础/tth1.png" alt="tth1"></p><p><img src="/2019/06/18/群论基础/天天喝.png" alt="tth2"></p><p><strong>第一同态定理</strong>:  若$\varphi:G\to H$是核为$K$的同态函数， 则$K$是$G$的正规子群。设$\phi:G\to G/K$是规范同态函数。则存在唯一的同构函数$\eta:G/K\to\varphi(G)$使得$\varphi=\eta\phi$ </p><p>规范同态函数产生的商群与原同态函数的像同构</p><p><strong>第二同态定理</strong>: 设$H$是$G$的子群(不需要正规)，$N$是$G$的正规子群，则$HN$是$G$的子群，$H\cap N$是$H$的正规子群，且$$H/H\cap N\cong HN/N$$<br><strong>一致性定理</strong>: 设$N$是$G$的正规子群，则$H\mapsto H/N$是包含$N$的子群$H$的集合与$G/N$的子群的集合间的一对一关系。此外，包含$N$的$G$的正规子群与$G/N$的正规子群相对应。<br><strong>第三同构定理</strong>: 设$N$和$H$是$G$的正规子群满足$N\subseteq H$,则$$G/H\cong\frac{G/N}{H/N}$$. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;参考书籍：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.phy.pku.edu.cn/~xzli/teaching.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;群论-李新征讲义&lt;/a&gt;&lt;/li&gt;

      
    
    </summary>
    
    
      <category term="-review" scheme="http://shelah-kuang.github.io/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>问求四机考复习</title>
    <link href="http://shelah-kuang.github.io/2019/06/17/%E9%97%AE%E6%B1%82%E5%9B%9B%E6%9C%BA%E8%80%83%E5%A4%8D%E4%B9%A0/"/>
    <id>http://shelah-kuang.github.io/2019/06/17/问求四机考复习/</id>
    <published>2019-06-17T08:12:01.000Z</published>
    <updated>2019-06-18T07:38:13.733Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>机考内容：<br>    线性规划（会提供模板、框架）<br>    KMP（会提供框架）<br>    模拟退火（会提供框架参考）<br>    Miller-Rabin素数测试</p></blockquote><h2 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h2><h3 id="算法介绍"><a href="#算法介绍" class="headerlink" title="算法介绍"></a>算法介绍</h3><p>TODO</p><h3 id="板子"><a href="#板子" class="headerlink" title="板子"></a>板子</h3><blockquote><p> 板子来源：<a href="https://doowzs.com/blog/2019-02-28-simplex-cpp-template/" target="_blank" rel="noopener">https://doowzs.com/blog/2019-02-28-simplex-cpp-template/</a></p></blockquote><p>将A[0][j]设置为目标函数的参数，整个函数为<br>$$<br>f = \sum_{j = 1}^{n} A[0][j]<br>$$<br>第<em>i</em>个约束条件为<br>$$<br>\sum_{j = 1}^n A[i][j] \leq A[i][0]<br>$$<br>运行<code>simplex()</code>的结果若为-1则无解，1则无界，0则代表有解。最优解为$A[0][0]$，v[j]为各个参数的值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> EPS = <span class="number">1e-8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> id[MAXN+MAXM] = &#123;&#125;;</span><br><span class="line"><span class="keyword">double</span> v[MAXN] = &#123;&#125;;</span><br><span class="line"><span class="keyword">double</span> a[MAXM][MAXN] = &#123;&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (x &lt; -EPS) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">return</span> x &gt; EPS ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pivot</span><span class="params">(<span class="keyword">int</span> r, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">  swap(id[n + r], id[c]);</span><br><span class="line">  <span class="keyword">double</span> x = -a[r][c];</span><br><span class="line">  a[r][c] = <span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) a[r][i] /= x;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (sgn(a[i][c]) &amp;&amp; i != r) &#123;</span><br><span class="line">      x = a[i][c];</span><br><span class="line">      a[i][c] = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n; ++j) a[i][j] += x * a[r][j];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">simplex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">/* important: revert symbols of conditions */</span></span><br><span class="line">  <span class="comment">/* bug fixed thanks to TuoMianZiGan */</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">      a[i][j] *= <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) id[i] = i;</span><br><span class="line">  <span class="comment">/* initial-simplex */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">      <span class="keyword">if</span> (sgn(a[i][<span class="number">0</span>]) &lt; <span class="number">0</span>) &#123; x = i; <span class="keyword">break</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!x) <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">      <span class="keyword">if</span> (sgn(a[x][i]) &gt; <span class="number">0</span>) &#123; y = i; <span class="keyword">break</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!y) <span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">// infeasible</span></span><br><span class="line">    pivot(x, y);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* solve-simplex */</span></span><br><span class="line">  <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">      <span class="keyword">if</span> (sgn(a[<span class="number">0</span>][i]) &gt; <span class="number">0</span>) &#123; x = i; <span class="keyword">break</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!x) <span class="keyword">break</span>; <span class="comment">// finished</span></span><br><span class="line">    <span class="keyword">double</span> w = <span class="number">0</span>, t = <span class="number">0</span>; <span class="keyword">bool</span> f = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">      <span class="keyword">if</span> (sgn(a[i][x]) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        t = -a[i][<span class="number">0</span>] / a[i][x];</span><br><span class="line">        <span class="keyword">if</span> (f || t &lt; w) &#123;</span><br><span class="line">          w = t, y = i, f = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!y) &#123; <span class="keyword">return</span> <span class="number">1</span>; &#125; <span class="comment">// unbounded</span></span><br><span class="line">    pivot(y, x);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) v[i] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt;= n + m; ++i) v[id[i]] = a[i - n][<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="相关题目"><a href="#相关题目" class="headerlink" title="相关题目"></a>相关题目</h3><p>TODO</p><h2 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h2><h3 id="算法介绍-1"><a href="#算法介绍-1" class="headerlink" title="算法介绍"></a>算法介绍</h3><p>TODO</p><h3 id="板子-1"><a href="#板子-1" class="headerlink" title="板子"></a>板子</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> nextv[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">KMP</span><span class="params">(<span class="keyword">char</span> s1[],<span class="keyword">char</span> s2[],<span class="keyword">int</span> s_length,<span class="keyword">int</span> p_length)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//caculate the next array</span></span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>,k=<span class="number">-1</span>;</span><br><span class="line">    nextv[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (j&lt;p_length)&#123;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">-1</span>||s2[j]==s2[k])&#123;</span><br><span class="line">            j++;k++;</span><br><span class="line">            nextv[j]=k;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            k=nextv[k];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//do kmp</span></span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;s_length)&#123;</span><br><span class="line">        <span class="keyword">if</span>(j==<span class="number">-1</span>||s1[i]==s2[j])&#123;</span><br><span class="line">            i++;</span><br><span class="line">            j++;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            j=nextv[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j==p_length)&#123;</span><br><span class="line">            <span class="comment">//return i-p_length+1;</span></span><br><span class="line">            flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;i-p_length+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            j=nextv[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="相关题目-1"><a href="#相关题目-1" class="headerlink" title="相关题目"></a>相关题目</h3><p>TODO</p><h2 id="模拟退火"><a href="#模拟退火" class="headerlink" title="模拟退火"></a>模拟退火</h2><h3 id="算法介绍-2"><a href="#算法介绍-2" class="headerlink" title="算法介绍"></a>算法介绍</h3><blockquote><p> 模拟退火算法描述：</p><p>​         若J( Y(i+1) )&gt;= J( Y(i) )  (即移动后得到更优解)，则总是接受该移动</p><p>​         若J( Y(i+1) )&lt; J( Y(i) )  (即移动后的解比当前解要差)，则<strong>以一定的概率接受移动，而且这个概率随着时间推移逐渐降低（逐渐降低才能趋向稳定）</strong></p><p>　　这里的“一定的概率”的计算参考了金属冶炼的退火过程，这也是模拟退火算法名称的由来。</p><p>　　根据热力学的原理，在温度为T时，出现能量差为dE的降温的概率为P(dE)，表示为：</p><p>　　　　<strong>P(dE) = exp( dE/(kT) )</strong></p><p>　　其中k是一个常数，exp表示自然指数，且dE&lt;0。这条公式说白了就是：温度越高，出现一次能量差为dE的降温的概率就越大；温度越低，则出现降温的概率就越小。又由于dE总是小于0（否则就不叫退火了），因此dE/kT &lt; 0 ，所以P(dE)的函数取值范围是(0,1) 。</p><p>　　随着温度T的降低，P(dE)会逐渐降低。</p><p>　　我们将一次向较差解的移动看做一次温度跳变过程，我们以概率P(dE)来接受这样的移动。</p><p>来源：<a href="http://www.cnblogs.com/heaad/" target="_blank" rel="noopener">http://www.cnblogs.com/heaad/</a></p></blockquote><h3 id="伪代码"><a href="#伪代码" class="headerlink" title="伪代码"></a>伪代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* J(y)：在状态y时的评价函数值</span></span><br><span class="line"><span class="comment">* Y(i)：表示当前状态</span></span><br><span class="line"><span class="comment">* Y(i+1)：表示新的状态</span></span><br><span class="line"><span class="comment">* r： 用于控制降温的快慢</span></span><br><span class="line"><span class="comment">* T： 系统的温度，系统初始应该要处于一个高温的状态</span></span><br><span class="line"><span class="comment">* T_min ：温度的下限，若温度T达到T_min，则停止搜索</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">while</span>( T &gt; T_min )</span><br><span class="line">&#123;</span><br><span class="line">　　dE = J( Y(i+<span class="number">1</span>) ) - J( Y(i) ) ; </span><br><span class="line">   <span class="keyword">if</span> ( dE &gt;=<span class="number">0</span> ) <span class="comment">//表达移动后得到更优解，则总是接受移动</span></span><br><span class="line">Y(i+<span class="number">1</span>) = Y(i) ; <span class="comment">//接受从Y(i)到Y(i+1)的移动</span></span><br><span class="line">　　<span class="keyword">else</span>&#123;<span class="comment">// 函数exp( dE/T )的取值范围是(0,1) ，dE/T越大，则exp( dE/T )也</span></span><br><span class="line"><span class="keyword">if</span> ( <span class="built_in">exp</span>( dE/T ) &gt; random( <span class="number">0</span> , <span class="number">1</span> ) )</span><br><span class="line">Y(i+<span class="number">1</span>) = Y(i) ; <span class="comment">//接受从Y(i)到Y(i+1)的移动</span></span><br><span class="line">　　&#125;</span><br><span class="line">　　T = r * T ; <span class="comment">//降温退火 ，0&lt;r&lt;1 。r越大，降温越慢；r越小，降温越快</span></span><br><span class="line">　　<span class="comment">/*</span></span><br><span class="line"><span class="comment">　　* 若r过大，则搜索到全局最优解的可能会较高，但搜索的过程也就较长。若r过小，则搜索的过程会很快，但最终可能会达到一个局部最优值</span></span><br><span class="line"><span class="comment">　　*/</span></span><br><span class="line">　　i ++ ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="相关题目-2"><a href="#相关题目-2" class="headerlink" title="相关题目"></a>相关题目</h3><p>todo</p><h2 id="Miller-Rabin素数测试"><a href="#Miller-Rabin素数测试" class="headerlink" title="Miller-Rabin素数测试"></a>Miller-Rabin素数测试</h2><h3 id="算法介绍-3"><a href="#算法介绍-3" class="headerlink" title="算法介绍"></a>算法介绍</h3><p>反复平方法取$a^b \mod n$</p><p><img src="/2019/06/17/问求四机考复习/反复平方法取幂.png" alt="反复平方法取幂"></p><p>利用费马小定理（如果p是一个素数,且0&lt;a&lt;p,则$a^{p-1}%p=1$.）<br>对于待测试的奇数n而言，(n-1)的二进制表示是u的二进制表示后恰好跟着t个0，所以可以先计算$2^u \mod n$,在反复平方t次来计算$2^{n-1}\mod n$.</p><p><img src="/2019/06/17/问求四机考复习/witness.png" alt="witness"></p><p><img src="/2019/06/17/问求四机考复习/rm.png" alt="miller-rabin"></p><h3 id="板子-2"><a href="#板子-2" class="headerlink" title="板子"></a>板子</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">exp_mod</span><span class="params">(LL a,LL b,LL m)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> bit[<span class="number">64</span>];</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        bit[i++] = (b &amp; <span class="number">1</span>) != <span class="number">0</span>;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LL s=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i--; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">        s = s * s % m;</span><br><span class="line">        <span class="keyword">if</span>(bit[i]) s = s * a % m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Witness</span><span class="params">(LL a,LL n)</span></span>&#123;</span><br><span class="line">    LL m = n<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>( !(m&amp;<span class="number">1</span>) )&#123;</span><br><span class="line">        j++;</span><br><span class="line">        m &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LL x = exp_mod(a,m,n);</span><br><span class="line">    LL y;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">1</span> || x == n<span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// n may be prime</span></span><br><span class="line">    <span class="keyword">while</span>(j--)&#123;</span><br><span class="line">        y = x * x % n;</span><br><span class="line">        <span class="keyword">if</span>(y==<span class="number">1</span> &amp;&amp; x!=<span class="number">1</span> &amp;&amp; x!=n<span class="number">-1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        x = y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(y!=<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// composite</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//may be prime</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Miller_Rabin</span><span class="params">(LL n,<span class="keyword">int</span> T=<span class="number">1</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>( !(n&amp;<span class="number">1</span>) ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        LL a = rand() * (n<span class="number">-2</span>) / RAND_MAX + <span class="number">1</span>; <span class="comment">//[1,n+1]</span></span><br><span class="line">        <span class="keyword">if</span>( Witness(a,n) ) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="相关题目-3"><a href="#相关题目-3" class="headerlink" title="相关题目"></a>相关题目</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=2138&amp;tdsourcetag=s_pctim_aiomsg" target="_blank" rel="noopener">HDU2138</a> </p><p>套板子就行了，只不过要看清题目有多个case，然后如果while+scanf来判断输入结束的话，记得加上!=EOF（<del>我才不会说我因为这个tle了很多次呢</del>）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;机考内容：&lt;br&gt;    线性规划（会提供模板、框架）&lt;br&gt;    KMP（会提供框架）&lt;br&gt;    模拟退火（会提供框架参考）&lt;br&gt;    Miller-Rabin素数测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;线性规划&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="-review" scheme="http://shelah-kuang.github.io/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>社会实践常见问题答复</title>
    <link href="http://shelah-kuang.github.io/2019/05/25/%E7%A4%BE%E4%BC%9A%E5%AE%9E%E8%B7%B5%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E7%AD%94%E5%A4%8D/"/>
    <id>http://shelah-kuang.github.io/2019/05/25/社会实践常见问题答复/</id>
    <published>2019-05-25T11:45:23.000Z</published>
    <updated>2019-05-25T13:15:40.474Z</updated>
    
    <content type="html"><![CDATA[<p>（动态更新）</p><h3 id="几个重点提示："><a href="#几个重点提示：" class="headerlink" title="几个重点提示："></a>几个重点提示：</h3><p>   1.如果你想要报销的话，一定要记得<strong>留发票</strong>！！！！</p><ol start="2"><li>积极的参与各种活动，因为你要知道，你懒得参加的活动很多人也会懒得参加，这会导致你们的竞争压力并不大，这些活动的奖项或许会在之后给你意想不到的惊喜</li><li>如果你没去宣讲会或者去了没听，<strong>请务必看一遍群里的ppt</strong></li><li><strong>群文件里面那个选题类型是去年的</strong> ，仅供大家参考，今年主题为<strong>“万名学子看中国”</strong>，具体的在ppt里面，大家可以看看</li></ol><h3 id="几个常见问题的答复"><a href="#几个常见问题的答复" class="headerlink" title="几个常见问题的答复"></a>几个常见问题的答复</h3><ol><li><p>我们每个立项都有机会参加校级答辩吗？还是有个数限制？有多少名额？</p><p>答：不会 ，院内会通过一些方式（今年的具体方式还在讨论）对你们的立项进行排序，然后上传给校团委，校团委会按照一定的比例或名额给院系排序的前面一部分团队让他们去答辩，然后决定这些团队是校重点还算校一般，具体名额与比例还有时间会根据今年的文件确定（但是今年文件还没下来）.</p></li><li><p>实践人数的限制</p><p>答：实践本身是没有人数限制的，本身有限制的是毛概论文上交的时候，院级团队的论文最多只能有5人拿到成绩，校级团队则可10人拿到成绩。故而有一些<del>无良</del>的校级团队在双选会的时候会多招一些人，然后最终根据小组贡献排名前十的拿到署名（就相当于你白做了）</p></li><li><p>实践与毛概的关系</p><blockquote><p>以下回答来自咨询群实志部 章抒文的回答：</p><p>（1）毛概报告和暑期社会实践的关系：学校里绝大多数同学会用暑期社会实践结项材料中的调研报告来交毛概实践课程的作业。毛概报告不一定要用暑期社会实践的报告，只要有一篇符合毛概要求报告就行。<br>（2）一般来说，毛概报告中，校级团队可以写10个人的名字，院级团队可以写5个人的名字，做一次实践长期有效，但老师可能会有自己的要求。这个人数限制也不是绝对的，可能会有变化，老师也不一定按这个人数要求大家。<br>（3）社会实践本身不限人数，但如果交毛概，使用同一份报告的人数有限制；如果团队人数确实超过规定，老师不允许你们这么多人用同一份报告，可以写两份不一样的报告或者让其中几个人交别的报告。<br>（4）关于哪些选题可以交毛概：详见群文件里2018年的毛概实践课程要求，今年可能有细微变动。<br>（5）毛概能不能只交纪录片：根据毛概要求，必须交文字版的实践报告，纪录片可以作为你们团队的附属作品</p></blockquote></li><li><p>关于跨院系组队，跨校组队立项院系</p><p>负责人在哪个院，就立在哪个院，结项与评优也在那个院进行（如负责人分流则以分流后院系为准）</p></li><li><p>关于双选会</p><p>双选会大概就是给个地方然后各个还缺人的校级团队在那摆个摊来收人，但就我去年的感觉来看（以下全为一面之词）,完全就是一个卖方市场，大多数团队正常的核心成员已经招收的差不多了，缺的是那些专业的人才（比如你统计学软件很6或者你是走宣传口的），大多数做个调研啊什么的人才已经不太缺了（但如果你运气好说不定也能捡个漏呢）</p><p>当然除了校级团队之外，特别专项也会在那个时候进行招人，如果有想参加特别专项的同学也可以等到那个时候去加入</p></li><li><p>关于报销</p><p>校级队伍是固定的有一批经费的(去年是校级重点3000，重点提名2000，校级一般1000，以上为启动经费，后续的经费会根据大家参与的评优得到一部分奖励经费，启动经费+奖励经费为各团队最终能够报销的经费总额度)，但是院级队伍去年立项的时候是说没有经费，但是今年结项的时候，校团委给每个院级队伍追加了一笔经费可供报销，今年情况不确定，（但是<strong>保险费一定报</strong>）所以建议大家<strong>能留发票就留发票</strong>（发票请按照格式留好，具体格式见ppt或之后的实践文件），别想着给学校省钱（但是如果院内最终走发票报销方式的话，建议还是用了多少报多少，没必要特意凑发票）</p></li><li><p>关于介绍信之类的</p><p>这个只有校级队伍会提供，<del>但是你可以找校级队伍要然后自己彩印一份</del> ，不过旗子和文化衫什么就没啦，所以大家还是积极的申请校级队伍吧</p></li><li><p>实践团队的人员可以变动吗</p><p>可以，只要负责人同学不变就行，最终以结项时上交的材料为准</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;（动态更新）&lt;/p&gt;
&lt;h3 id=&quot;几个重点提示：&quot;&gt;&lt;a href=&quot;#几个重点提示：&quot; class=&quot;headerlink&quot; title=&quot;几个重点提示：&quot;&gt;&lt;/a&gt;几个重点提示：&lt;/h3&gt;&lt;p&gt;   1.如果你想要报销的话，一定要记得&lt;strong&gt;留发票&lt;/str
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>R语言学习</title>
    <link href="http://shelah-kuang.github.io/2019/05/06/R%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    <id>http://shelah-kuang.github.io/2019/05/06/R语言学习/</id>
    <published>2019-05-06T12:39:03.000Z</published>
    <updated>2019-05-08T09:21:03.271Z</updated>
    
    <content type="html"><![CDATA[<h2 id="5-数据处理样例"><a href="#5-数据处理样例" class="headerlink" title="5 数据处理样例"></a>5 数据处理样例</h2><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p><code>匹配顺序：</code>圆括号括起来的表达式最优先，其次是表示重复次数的操作（即 * + { }）；再次是连接运算（即几个字符放在一起，如abc）；最后是表示可选项的运行（|）</p><p>常用的元字符</p><table><thead><tr><th><strong>符号</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>.</td><td>匹配除换行符“/n”以外的任意字符</td></tr><tr><td>\</td><td>转义字符，匹配元字符时，使用“\元字符”</td></tr><tr><td>\</td><td></td><td>表示可选项，即 \</td><td>前后的表达式任选一个</td></tr><tr><td>^</td><td>匹配字符串的开始</td></tr><tr><td>$</td><td>匹配字符串的结束</td></tr><tr><td>(   )</td><td>提取匹配的字符串，即括号内的看成一个整体，即指定子表达式</td></tr><tr><td>[   ]</td><td>可匹配方括号内任意一个字符</td></tr><tr><td>{}</td><td>前面的字符或表达式的重复次数：{n}表示重复n次；{n,}重复n次到更多次；{n,m}表示重复n次到m次</td></tr><tr><td>*</td><td>前面的字符或表达式重复0次或更多次</td></tr><tr><td>+</td><td>前面的字符或表达式重复1次或更多次</td></tr><tr><td>？</td><td>前面的字符或表达式重复0次或1次</td></tr></tbody></table><p>特殊字符与反义</p><table><thead><tr><th><strong>符号</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>\d与 \D</td><td>匹配1位数字字符，匹配非数字字符</td></tr><tr><td>\s 与 \S</td><td>匹配空白符，匹配非空白符</td></tr><tr><td>\w 与 \W</td><td>匹配字母或数字或下划线或汉字，匹配非\w字符</td></tr><tr><td>\b 与 \B</td><td>匹配单词的开始或结束的位置，匹配非\b的位置</td></tr><tr><td>\h 与 \H</td><td>匹配水平间隔，匹配非水平间隔</td></tr><tr><td>\v 与 \V</td><td>匹配垂直间隔，匹配非垂直间隔</td></tr><tr><td>[^…]</td><td>匹配除了…以外的任意字符</td></tr></tbody></table><p>POSIX字符类</p><table><thead><tr><th><strong>符号</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>[[:lower:]]</td><td>小写字母</td></tr><tr><td>[[:upper:]]</td><td>大写字母</td></tr><tr><td>[[:alpha:]]</td><td>所有大小写字母</td></tr><tr><td>[[:digit:]]</td><td>数字0-9</td></tr><tr><td>[[:alnum:]]</td><td>字母和数字</td></tr><tr><td>[[:blank:]]</td><td>空白符：空格、制表符、换行符、中文全角空格等</td></tr><tr><td>[[:cntrl:]]</td><td>控制字符</td></tr><tr><td>[[:punct:]]</td><td>标点符号：! ” # % &amp; ’ () * + - . / : ;等</td></tr><tr><td>[[:space:]]</td><td>空格字符：空格, 制表符, 垂直制表符,   回车,   换行符,   换页符</td></tr><tr><td>[[:xdigit:]]</td><td>十六进制数字：0-9 A-F a-f</td></tr><tr><td>[[:print:]]</td><td>控制字符：[[:alpha:]], [[:punct:]],   [[:space:]]</td></tr><tr><td>[[:graph:]]</td><td>图形化字符：[[:alpha:]], [[:punct:]]</td></tr></tbody></table><p>在R语言中，如果需要匹配后替换，可以使用<code>sub()</code> 与 <code>gsub()</code>指令，如需匹配元字符，在前面加上<code>\\</code>符号。</p><h3 id="处理实例"><a href="#处理实例" class="headerlink" title="处理实例"></a>处理实例</h3><h4 id="读入数据"><a href="#读入数据" class="headerlink" title="读入数据"></a>读入数据</h4><p><code>readLines()</code> : 将文档转为以行为单位存放的list格式, <code>readLines(file,n=读入行数)</code></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">txt = readLines(<span class="string">"d:/offline.final.trace.txt"</span>)</span><br><span class="line">length(txt)  <span class="comment"># 查看多少行数据</span></span><br><span class="line">substr(txt,<span class="number">1</span>,<span class="number">1</span>)==“<span class="comment">#” #查找注释行</span></span><br></pre></td></tr></table></figure><h4 id="处理数据"><a href="#处理数据" class="headerlink" title="处理数据"></a>处理数据</h4><p><strong><code>strsplit(x, split, fixed= F, perl= F, useBytes= F)</code></strong></p><p>  在R里面，strsplit一般用来进行字符串分割操作，strsplit函数有<strong>x、split、fixed、perl</strong>这四个选项。<br>参数x为字符串格式向量，函数依次对向量的每个元素进行拆分<br>参数split为拆分位置的字串向量，即在哪个字串处开始拆分；该参数默认是正则表达式匹配；若设置fixed= T则表示是用普通文本匹配或者正则表达式的精确匹配。用普通文本来匹配的运算速度要快些。<br>参数perl的设置和perl的版本有关，表示可以使用perl语言里面的正则表达式。如果正则表达式过长，则可以考虑使用perl的正则来提高运算速度。<br>参数useBytes表示是否逐字节进行匹配，默认为FALSE，表示是按字符匹配而不是按字节进行匹配。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;5-数据处理样例&quot;&gt;&lt;a href=&quot;#5-数据处理样例&quot; class=&quot;headerlink&quot; title=&quot;5 数据处理样例&quot;&gt;&lt;/a&gt;5 数据处理样例&lt;/h2&gt;&lt;h3 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UTcode_learning</title>
    <link href="http://shelah-kuang.github.io/2019/05/04/UTcode-learning/"/>
    <id>http://shelah-kuang.github.io/2019/05/04/UTcode-learning/</id>
    <published>2019-05-04T14:55:35.000Z</published>
    <updated>2019-05-09T15:28:30.406Z</updated>
    
    <content type="html"><![CDATA[<p>此篇blog为看LARG团队的<a href="https://github.com/LARG/utaustinvilla3d" target="_blank" rel="noopener">UT框架代码</a>的学习笔记，仅作学习用。</p><h1 id="Main-cc"><a href="#Main-cc" class="headerlink" title="Main.cc"></a>Main.cc</h1><p>调用流程（整个过程中利用try-catch进行了异常处理）：<br>PrintGreeting() -&gt; ReadOptions( ) -&gt; Init( ) -&gt; Run( ) -&gt; Done( ) </p><h2 id="ReadOptions（）"><a href="#ReadOptions（）" class="headerlink" title="ReadOptions（）"></a>ReadOptions（）</h2><p>设置team名 -&gt; 对argv[i]字符串匹配 (下列举部分)</p><p>默认设置</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">outputFile</span><span class="params">(<span class="string">""</span>)</span></span>; <span class="comment">// For optimization</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">agentType</span><span class="params">(<span class="string">"naoagent"</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">rsg</span><span class="params">(<span class="string">"rsg/agent/nao/nao.rsg"</span>)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="字符串匹配"><a href="#字符串匹配" class="headerlink" title="字符串匹配"></a>字符串匹配</h3><blockquote><p>string.substr(size_t pos = 0, size_t len = npos) :<br>    从第pos（默认为0）的位置复制 len长度的子字符串</p><p>strncmp()</p></blockquote><p>–team：<br>    设置argv[i+1] 为teamname<br>–paramsfile<br>    设置inputsFile = argv[i+1]，并调用 <code>LoadParams(inputsFile)</code><br>–experimentout<br>    设置outputFile = argv[i+1]<br>–optimize<br>    设置agentType = argv[i+1]<br>– type<br>    设置rsg = “rsg/agent/nao/nao_hetero.rsg “ + string(argv[i+1])，并令agentBodyType = atoi(argv[i+1])<br>–rsg<br>    设置rsg = argv[i+1]<br>–pkgoalie \ –pkshooter \ –gazebo \ –recordstats<br>    设置agentType 为对应输入</p><h2 id="Run"><a href="#Run" class="headerlink" title="Run( )"></a>Run( )</h2><p>根据agentType的不同类型决定不同的Behavior子类</p><p>然后进入循环，执行以下操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (gLoop)</span><br><span class="line">&#123;</span><br><span class="line">    GetMessage(msg);</span><br><span class="line">    <span class="built_in">string</span> msgToServer = behavior-&gt;Think(msg);</span><br><span class="line">    <span class="comment">// To support agent sync mode</span></span><br><span class="line">    msgToServer.append(<span class="string">"(syn)"</span>);</span><br><span class="line">    PutMessage(msgToServer);</span><br><span class="line">    <span class="keyword">if</span> (mPort != <span class="number">-1</span>) &#123;</span><br><span class="line">        PutMonMessage(behavior-&gt;getMonMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="GetMessage"><a href="#GetMessage" class="headerlink" title="GetMessage()"></a>GetMessage()</h3><p>挖坑，之后补</p><h3 id="PutMessage（）"><a href="#PutMessage（）" class="headerlink" title="PutMessage（）"></a>PutMessage（）</h3><p>挖坑，之后补</p><h1 id="Behavior"><a href="#Behavior" class="headerlink" title="Behavior"></a>Behavior</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Behavior</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    Behavior();<span class="comment">//构造函数</span></span><br><span class="line">    <span class="keyword">virtual</span> ~Behavior();<span class="comment">//析构函数</span></span><br><span class="line">    <span class="comment">/** called once when the initially connected to the server */</span></span><br><span class="line">    <span class="keyword">virtual</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">Init</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/** called for every message received from the server; should</span></span><br><span class="line"><span class="comment">        return an action string */</span></span><br><span class="line">    <span class="keyword">virtual</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">Think</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; message)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/** Get message for sending to the server through the monitor port */</span></span><br><span class="line">    <span class="keyword">virtual</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getMonMessage</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p><strong>虚函数</strong> 是在基类中使用关键字 <strong>virtual</strong> 声明的函数。在派生类中重新定义基类中定义的虚函数时，会告诉编译器不要静态链接到该函数。我们想要的是在程序中任意点可以根据所调用的对象类型来选择调用的函数，这种操作被称为<strong>动态链接</strong>，或<strong>后期绑定</strong>。</p></blockquote><p>在几种类型的behavior中，<code>GazeboBehavior,PKShooterBehavior,PKGoalieBehavior</code> 都以public的方式<code>NaoBehavior</code>基类，</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;此篇blog为看LARG团队的&lt;a href=&quot;https://github.com/LARG/utaustinvilla3d&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;UT框架代码&lt;/a&gt;的学习笔记，仅作学习用。&lt;/p&gt;
&lt;h1 id=&quot;Main-c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>机器学习-wed</title>
    <link href="http://shelah-kuang.github.io/2019/02/11/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0-wed/"/>
    <id>http://shelah-kuang.github.io/2019/02/11/机器学习-wed/</id>
    <published>2019-02-11T08:04:35.000Z</published>
    <updated>2019-05-13T13:34:25.327Z</updated>
    
    <content type="html"><![CDATA[<h2 id="we"><a href="#we" class="headerlink" title="we"></a>we</h2><h4 id="监督学习：我们教计算机（supervised-learning）"><a href="#监督学习：我们教计算机（supervised-learning）" class="headerlink" title="监督学习：我们教计算机（supervised learning）"></a>监督学习：我们教计算机（supervised learning）</h4><p>给予数据集，希望得到更多的正确答案 </p><p>回归问题（regression problem）：预测连续值输出 predict continuous valued output</p><p>分类问题（classification problem）：试图预测离散值输出（例如判断恶性肿瘤与良性肿瘤）</p><h4 id="无监督学习-计算机自行学习（unsupervised-learning）"><a href="#无监督学习-计算机自行学习（unsupervised-learning）" class="headerlink" title="无监督学习: 计算机自行学习（unsupervised learning）"></a>无监督学习: 计算机自行学习（unsupervised learning）</h4><p>给了数据集，试图对其进行分类</p><p>聚类算法（clustering algorithms）：给了一个数据集，但是没有特征 ，可能把数据分成几个簇（例如给了客户数据判断细分市场）</p><p>cocktail party problem（有两个录音，每个录音都混合了两种声音，但是由于每个录音都与其中一个音源近，试图分离两种声音）</p><h2 id="week-2-单变量线性回归（univariate-linear-regreesion）"><a href="#week-2-单变量线性回归（univariate-linear-regreesion）" class="headerlink" title="week 2 单变量线性回归（univariate linear regreesion）"></a>week 2 单变量线性回归（univariate linear regreesion）</h2><p>课程中使用的符号</p><p>​    m：训练样本数量</p><pre><code>x：输入变量\特征</code></pre><p>​    y：输出</p><p>​    $x^{(i)},y^{(i)}$ : 第i个训练样本</p><p>​    h：假设函数（hypothesis）$h_\theta(x)=\theta_0+\theta_1x$</p><p>代价函数（cost function）</p><p>​    Hypothesis: $h_\theta(x)=\theta_0+\theta_1x​$</p><p>​        $\theta_i$’s: parameters of model 模型参数    </p><p> 我们想要让估计值与真实值的差最小，即(其中的1/2只是为了便于计算)</p><p>​                                $${\mathop{minimize}\limits_{\theta_0,\theta_1} \frac{1}{2m}\sum_{i=0}^m\left(h_\theta(x^{(i)})-y^{(i)}\right)^2}$$</p><p>记${J(\theta_0,\theta_1)=\frac{1}{2m}\sum_{i=0}^m\left(h_\theta(x^{(i)})-y^{(i)}\right)^2}​$为代价函数（cost function）（平方误差函数）</p><p>假设$\theta_0$为0，可以画出$J(\theta_1)$的图像（类似于一个碗状函数的基本形状）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;we&quot;&gt;&lt;a href=&quot;#we&quot; class=&quot;headerlink&quot; title=&quot;we&quot;&gt;&lt;/a&gt;we&lt;/h2&gt;&lt;h4 id=&quot;监督学习：我们教计算机（supervised-learning）&quot;&gt;&lt;a href=&quot;#监督学习：我们教计算机（supervise
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python学习</title>
    <link href="http://shelah-kuang.github.io/2019/01/31/python%E5%AD%A6%E4%B9%A0/"/>
    <id>http://shelah-kuang.github.io/2019/01/31/python学习/</id>
    <published>2019-01-31T14:22:26.000Z</published>
    <updated>2019-01-31T14:22:26.826Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>高级英语词汇 word power made easy</title>
    <link href="http://shelah-kuang.github.io/2019/01/03/%E9%AB%98%E7%BA%A7%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%B1%87-word-power-made-easy/"/>
    <id>http://shelah-kuang.github.io/2019/01/03/高级英语词汇-word-power-made-easy/</id>
    <published>2019-01-03T14:52:11.000Z</published>
    <updated>2019-01-05T15:28:51.889Z</updated>
    
    <content type="html"><![CDATA[<p>这怎么背的完啊  呜呜呜呜呜呜</p><p>我是怎样的傻才会傻到选词汇啊……</p><h1 id="PART-1"><a href="#PART-1" class="headerlink" title="PART 1"></a>PART 1</h1><h3 id="SESSION-1-3"><a href="#SESSION-1-3" class="headerlink" title="SESSION 1-3"></a>SESSION 1-3</h3><p>egoist</p><p>egotist</p><p>introvert            n.性格内向的人<br>extrovert    n. 外向；外倾者；性格外向者（等于extravert）<br>ambivert    中间性格者<br>ambidextrous    两手都善用的<br>ambidexterity    n.双手都灵活,怀二心<br>dexterous    a.灵巧的，熟练的<br>dexterity    n.纯熟，灵巧<br>perilous    adj. 危险的，冒险的<br>sinister    a.恶意的；凶兆的，不祥的<br>gauche    笨拙的，缺乏社交经验的：lacking grace<br>gaucherie    n．笨拙<br>adroit    a.熟练的，灵巧的<br>misanthrope    n.厌恶人类者<br>misogynist    n. 厌恶女人的人<br>misogamist    n.厌恶结婚的人<br>anthropo    人，人类<br>Anthropology    n. 人类学<br>philanthropist    n. 慈善家<br>gynecologist    妇科医生<br>Polygamy    n．一夫多妻制,多配偶制<br>monogamy    n.一夫一妻制<br>bigamy    n. 重婚罪，重婚<br>Polyandry    n. 一妻多夫制<br>ascetic    a.禁欲的；n.苦行者<br>Asceticism    n.禁欲主义</p><p>Quiz 1</p><p>gynecology</p><p>anthropology</p><p>philanthropy</p><p>misnthropy</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这怎么背的完啊  呜呜呜呜呜呜&lt;/p&gt;
&lt;p&gt;我是怎样的傻才会傻到选词汇啊……&lt;/p&gt;
&lt;h1 id=&quot;PART-1&quot;&gt;&lt;a href=&quot;#PART-1&quot; class=&quot;headerlink&quot; title=&quot;PART 1&quot;&gt;&lt;/a&gt;PART 1&lt;/h1&gt;&lt;h3 id=&quot;SE
      
    
    </summary>
    
    
      <category term="-review" scheme="http://shelah-kuang.github.io/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>近代史复习</title>
    <link href="http://shelah-kuang.github.io/2018/12/28/%E8%BF%91%E4%BB%A3%E5%8F%B2%E5%A4%8D%E4%B9%A0/"/>
    <id>http://shelah-kuang.github.io/2018/12/28/近代史复习/</id>
    <published>2018-12-28T12:12:01.000Z</published>
    <updated>2019-01-15T09:16:26.059Z</updated>
    
    <content type="html"><![CDATA[<p>开坑开坑 ，一日一更，大概一天三到四个知识点的样子似乎刚刚好卡到考试前</p><p>文中引用部分为<a href="https://mengzelev.github.io/" target="_blank" rel="noopener">mengzelev</a>与<a href="https://marukohe.github.io/" target="_blank" rel="noopener">hw巨巨</a>所总结的部分</p><p><strong>考试时间</strong> ：1.3   16:30-18:30</p><p><strong>考试题型</strong>：名词解释   简答题  论述题</p><p><strong>近代史重点大纲</strong>：</p><ul><li><p>[x]  不平等条约：南京条约 马关条约 辛丑条约 </p></li><li><p>[x]  领事裁判权</p></li><li><p>[x] 早期维新思想的代表人物以及看法</p></li><li><p>[x]  太平天国 天朝田亩制度</p></li><li><p>[x] 洋务运动的历史作用</p></li><li><p>[x]  清末的新政</p></li><li><p>[x]  同盟会</p></li><li><p>[x]  新文化运动的口号</p></li><li><p>[x]  国共合作  如何形成  如何破裂</p></li><li><p>[x]  北伐</p></li><li><p>[x] 南昌起义</p></li><li><p>[x]  伪满政权</p></li><li><p>[x]  抗争初期 上海 八百壮士 </p></li></ul><p><strong>知识点清单</strong></p><h4 id="几个不平等条约"><a href="#几个不平等条约" class="headerlink" title="几个不平等条约"></a>几个不平等条约</h4><p>这个不知道怎么整理，先附上网址吧，感觉讲的还比较详细了</p><h5 id="南京条约"><a href="#南京条约" class="headerlink" title="南京条约"></a>南京条约</h5><p>部分内容：</p><ul><li><p>大清和英国停战并缔结永久和平及对等关系。</p></li><li><p>清政府向英方开放沿海的广州、福州、厦门、宁波、上海五处港口，进行贸易通商。</p></li><li><p>清政府将香港岛割让予英国治理。</p></li><li><p>清政府向英国共赔偿2千1百万银圆。</p></li><li><p>两国各自释放对方军民。</p></li><li><p>英军撤出南京、定海等处江面和岛屿。</p></li><li><p>两国共同订立进出口关税。</p><p><a href="https://zh.wikipedia.org/wiki/%E5%8D%97%E4%BA%AC%E6%9D%A1%E7%BA%A6" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E5%8D%97%E4%BA%AC%E6%9D%A1%E7%BA%A6</a></p></li></ul><blockquote><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><ul><li>1842年</li></ul><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><ul><li>割地：割香港岛给英国</li><li>赔款：赔偿英国2100万银元</li><li>开五口： 开放广州、厦门、福州、宁波、上海五个通商口岸</li><li>协定关税：英商进出口货物缴纳的关税，中国须与英国商定</li></ul><h3 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h3><ul><li>是近代西方资本主义国家强加在中国人民身上的第一个不平等条约</li><li>英国以武力侵略的方式迫使中国接受其侵略要求，使中国主权国家的独立地位遭到了破坏</li><li>英国强占香港岛，损害了中国领土的完整</li><li>通商口岸成为西方资本主义对中国进行殖民掠夺和不等价交换的中心</li><li>巨额赔款加重了清政府的财政负担，使劳动人民的生活更加艰苦</li><li>《南京条约》签订后，西方列强趁火打劫，相继强迫清政府签订了一系列不平等条约。</li><li>从此中国逐步沦为半殖民地半封建社会。</li></ul></blockquote><h5 id="马关条约"><a href="#马关条约" class="headerlink" title="马关条约"></a>马关条约</h5><blockquote><h3 id="时间-1"><a href="#时间-1" class="headerlink" title="时间"></a>时间</h3><ul><li>1895年</li></ul><h3 id="内容-1"><a href="#内容-1" class="headerlink" title="内容"></a>内容</h3><ul><li>割地：割辽东半岛、台湾及其附属岛屿、澎湖列岛给日本</li><li>赔款：赔偿日本军费2亿两白银</li><li>开四口：开沙市、重庆、苏州、杭州为商埠</li><li>日本可以在中国通商口岸投资设厂，产品运销中国内地面的内地税</li></ul><h3 id="意义-1"><a href="#意义-1" class="headerlink" title="意义"></a>意义</h3><ul><li>掀起了帝国主义瓜分中国的狂潮</li><li>赔款加重了人民的负担</li><li>列强势力进一步深入中国内地</li><li>阻碍了中国民间资本主义的发展</li><li>中国半殖民地化程度大大加深</li></ul></blockquote><p><a href="https://zh.wikipedia.org/wiki/%E9%A9%AC%E5%85%B3%E6%9D%A1%E7%BA%A6" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E9%A9%AC%E5%85%B3%E6%9D%A1%E7%BA%A6</a></p><h5 id="辛丑条约"><a href="#辛丑条约" class="headerlink" title="辛丑条约"></a>辛丑条约</h5><p>是大清帝国与英国、美国、日本、俄国、法国、德国、意大利、奥匈、比利时、西班牙和荷兰十一国在义和团运动结束、八国联军攻入北京后签定的一个和平协定。是中国近代史上赔款数目最庞大，皇权丧失最严重的条约。</p><blockquote><h3 id="时间-2"><a href="#时间-2" class="headerlink" title="时间"></a>时间</h3><ul><li>1901年</li></ul><h3 id="内容-2"><a href="#内容-2" class="headerlink" title="内容"></a>内容</h3><ul><li>中国向各国赔偿白银4.5亿两，分39年还清，本息合计</li><li>拆毁北京至大沽的炮台，准许各国派兵驻守北京至山海关沿线的铁路</li><li>划定北京东交民巷为“使馆界”，界内不允许中国人居住，由各国派兵保护</li><li>惩办义和团中参加反帝斗争的官吏，永远禁止中国人民成立反帝性质的组织，对反帝运动镇压不力的官员，“即行革职，记不叙用”</li><li>改总理衙门为外务部，位居六部之首</li></ul><h3 id="意义-2"><a href="#意义-2" class="headerlink" title="意义"></a>意义</h3><ul><li>巨额赔款本息合计达白银9.8亿两,给中国人民增加了新的负担</li><li>关于禁止中国人民反侵略和允许帝国主义在华驻军的规定,严重损害了中国主权</li><li>清政府完全成为帝国主义统治中国的工具</li><li>中国完全沦为半殖民地半封建社会</li></ul></blockquote><p><a href="https://zh.wikipedia.org/wiki/%E8%BE%9B%E4%B8%91%E6%9D%A1%E7%BA%A6" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E8%BE%9B%E4%B8%91%E6%9D%A1%E7%BA%A6</a></p><hr><h4 id="领事裁判权"><a href="#领事裁判权" class="headerlink" title="领事裁判权"></a>领事裁判权</h4><p>1843年中英《五口通商章程》裁定，在通商口岸，中国人如与英侨“遇有交涉诉讼”，英国领事有“查察”“听诉”之权，英国人如何治罪，由英国议定章程、法律，发给管事官照办。</p><p>1844年中美《望厦条约》，扩大了领事裁判权的范围，所有美国人在华一切之民事、刑事诉讼，均由本国领事等官询明办理</p><p>wiki：<strong>领事裁判权</strong>（英语：consular jurisdiction）即在一国家内，非该国籍人士在当地犯罪，可不接受该国法律审判，而审判权归属于外国派来的领事官。</p><hr><h4 id="早期维新思想的代表人物及其看法"><a href="#早期维新思想的代表人物及其看法" class="headerlink" title="早期维新思想的代表人物及其看法"></a>早期维新思想的代表人物及其看法</h4><blockquote><ul><li>王韬、薛福成、马建忠、郑观应：主张学习西放先进的科学技术，同时也要求吸纳西方的政治、经济学说。他们的共同特点，就是具有比较强烈的反对外国侵略、追求中国独立富强的爱国思想，以及具有一定程度反对封建专制的民主思想。如，郑观应在所著《盛世危言》中提出大力发证民族工商业，同西方国家进行“商战”，设立议院，实行“君民共主”制度等主张。这些主张具有重要的思想启蒙的意义。</li></ul></blockquote><hr><h4 id="太平天国的天朝田亩制度"><a href="#太平天国的天朝田亩制度" class="headerlink" title="太平天国的天朝田亩制度"></a>太平天国的天朝田亩制度</h4><p><strong>时间</strong></p><p>太平天国定都天京后（1853年）</p><p><strong><code>天朝田亩制度是最能体现太平天国社会理想与这次农民起义特色的纲领性文件</code></strong></p><p><strong>内容</strong></p><p>确立了平均分配土地的方案，“凡天下田，天下人同耕”，按人口平均分配土地</p><p><strong>目的</strong></p><p>其图建立理想社会，这个制度实际上是一个以<strong>解决土地问题</strong>为中心的比较完整的社会改革方案</p><p><strong>意义</strong></p><ul><li>从根本上否定了封建社会的基础，即封建地主的土地所有制，体现了广大农民要求平均分配土地的强烈愿望，是对以往的农民战争中“均贫富，等贵贱”，“均平”“均田”思想的发展与超越，具有进步意义。</li><li>（失败原因）但是其没有超过农民小生产者的狭隘眼界。其所描绘的理想天国仍然是闭塞的自给自足的自然经济，是小农业与家庭手工夜所相结合的传统生活方式，同时也是一个没有商品交换与绝对平均的社会。很大程度上具有不切实际的空想的性质。</li></ul><hr><h4 id="洋务运动的历史作用"><a href="#洋务运动的历史作用" class="headerlink" title="洋务运动的历史作用"></a>洋务运动的历史作用</h4><ul><li>提出了自强、求富的主张，通过所掌握的国家权力集中力量优先发展军事工业，同时也试图发展若干民用企业，<code>在客观上对中国的早期工业和民族资本主义的发展起了某些促进作用</code>,<em>但是其主要目的是维护封建统治，而不是要使中国朝着独立的资本主义方向发展</em></li><li>开办了一批新式学堂，派出了最早的官派留学生，这是<code>中国近代教育的开始</code>。</li><li>翻译了一批书籍，给当时的中国带来了新的知识，使人们开阔了眼界</li><li>随着资本主义生产方式的出现，传统的“重农抑商”的观念受到冲击，<code>社会风气与价值观念发生了变化</code>,工商业者的地位上升。</li><li>对一部分人而言，其将西方的技术与器物视为模仿与学习的对象，这有利于资本主义的发展与社会风气的改变。</li></ul><hr><h4 id="清末的新政"><a href="#清末的新政" class="headerlink" title="清末的新政"></a>清末的新政</h4><p><strong>背景</strong></p><p>1901年辛丑条约的牵动标志着慈禧为首的清政府放弃了抵抗外国侵略者的念头，也使得国人对清政府更加失望，国内要求改革的呼声日渐高涨，清政府内外交困</p><p><strong>时间</strong></p><p>1901年4月成立督办政务处，宣布实施新政</p><p><strong>措施</strong></p><ul><li>设立商务部、学部、巡警部等中央行政机构</li><li>裁撤绿营，建立新军</li><li>颁布商法商律，奖励工商</li><li>鼓励留学，颁布新的学制，并下令从1906年起废除科举考试</li><li>迫于内外压力，清政府又于1906年宣布“预备仿行宪政”，并于1908年颁布了《钦定宪法大纲》，制定了一个仿效日本实行君主立宪的方案，但又规定了9年的预备立宪期限。</li></ul><p><strong>最终结果与失败原因</strong></p><p>不仅没有挽救清王朝，反而激化了社会矛盾，加重了危机，其主要原因在于清政府改革的根本目的是为了延续其反动统治。不仅没有答应资产阶级立宪派的关于立即召开国会的请求，还镇压了立宪派的国会请愿活动，并借立宪的目的巩固皇权。这不仅使立宪派大失所望，还使得统治集团内部的满汉矛盾和中央与地方之间的矛盾日渐尖锐而分离崩析。</p><hr><h4 id="同盟会"><a href="#同盟会" class="headerlink" title="同盟会"></a>同盟会</h4><p><strong>时间</strong></p><p>1905年8月20日</p><p><strong>相关事件</strong></p><p>孙中山、黄兴、宋教仁等人在日本东京成立中国同盟会，孙中山被公举为总理，黄兴被任命执行部庶务</p><p>同盟会以<strong><code>《民报》</code></strong>为机关报，并确认革命纲领。</p><p><strong>同盟会的政治纲领</strong></p><p><code>驱除鞑虏，恢复中华，创立民国，平均地权</code></p><p><strong>三民主义</strong></p><p>1905年11月，孙中山将其纲领概括为民族主义（驱除鞑虏，恢复中华），民权主义（创立民国），民生主义（平均地权），后被称为三民主义</p><p><strong>意义</strong></p><p>近代中国<code>第一个</code>领导<code>资产阶级革命</code>的全国性政党</p><p>他的成立标志着中国资产阶级民主革命进入了一个新的阶段</p><hr><h4 id="新文化运动的口号"><a href="#新文化运动的口号" class="headerlink" title="新文化运动的口号"></a>新文化运动的口号</h4><p><em>陈独秀等人把主要的注意力集中在了清除旧思想方面，改造国民性，故而新文化运动的倡导者提出了<code>破除迷信</code>的口号，以反对旧道德提倡新道德、反对旧文学提倡新文学为文化革命的两大旗帜。</em></p><p><strong>基本口号</strong>：<code>民主与科学</code>，即所谓的拥护德先生与赛先生</p><p><strong>具体含义</strong>：</p><p>民主： 资产阶级民主主义的制度、资产阶级民主主义的思想</p><p>科学：狭义的是自然科学，广义的是社会科学，用自然科学一样的科学精神与科学方法来研究社会（但是他也把创造进化论等资产阶级唯心主义思想体系算作了科学的范畴）</p><p><em>目的：在中国“建设西洋式之新国家”</em></p><hr><h4 id="国共合作-如何形成-如何破裂"><a href="#国共合作-如何形成-如何破裂" class="headerlink" title="国共合作  如何形成  如何破裂"></a>国共合作  如何形成  如何破裂</h4><h6 id="国共合作的形成"><a href="#国共合作的形成" class="headerlink" title="国共合作的形成"></a>国共合作的形成</h6><ul><li>1923年2月7日京汉铁路罢工遭到了北洋政府的血腥镇压，中国工人运动暂时转入了低潮，中国共产党认识到，中国无产阶级单凭自己一个阶级的力量是无法取得胜利的，他们必须要在各种不同情形下团结一切可能团结的革命阶层与与阶级</li><li>中国当时现存的政党中，只有国民党是比较革命的民主派，于是决定首先争取与国民党合作</li><li>孙中山在晚年的时候，在俄国十月革命与五四运动的影响下，在苏俄、共产国际与中国共产党的帮助下，实现了伟大的思想转变。欢迎共产党人与其合作，欢迎苏联援助中国革命，实行联俄、联共、扶助农工三大政策。</li><li>中国共产党在二大提出实行“党外合作”（即所有合作均不涉及党内事务），但共产国际驻华代表马林却倡议实行“党内合作”（即中国共产党员以个人身份加入中国国民党），把中国国民党改造为各革命阶级联盟。</li><li><strong><code>国民党一大的召开，标志着第一次国共合作的形成</code></strong></li></ul><h6 id="国共合作的破裂"><a href="#国共合作的破裂" class="headerlink" title="国共合作的破裂"></a>国共合作的破裂</h6><ul><li>1926年三月蒋介石制造了“中山舰事件”，打击共产党与工农力量</li><li>1927年4月12日，蒋介石在上海发动了反共政变，以“清党”为名，在东南各省大规模捕杀共产党员和革命群众</li><li>同年7月15日，当时任武汉国民政府主席的汪精卫在武汉召开“分共”会议，并在其辖区内对共产党员和革命群众实行搜捕和屠杀，<strong><code>国共合作全面破裂</code></strong></li></ul><h6 id="大革命失败的原因（亦能算作合作破裂原因）"><a href="#大革命失败的原因（亦能算作合作破裂原因）" class="headerlink" title="大革命失败的原因（亦能算作合作破裂原因）"></a>大革命失败的原因（亦能算作合作破裂原因）</h6><ul><li>客观来说<ul><li>反革命力量的强大，资产阶级发生严重的动摇，统一战线出现剧烈的分化</li><li>蒋介石集团、汪精卫集团被帝国主义势力和地主阶级、买办资产姐姐拉近反革命营垒里去了</li></ul></li></ul><ul><li>主观来看<ul><li>中国共产党的中央领导机关在大革命的后期犯了以陈独秀为代表的右倾机会主义错误，放弃无产阶级对与农民、城市小资产阶级与民族资产阶级的领导权，尤其是武装力量的领导权</li><li>中国共产党还处于年幼时期，没有经验，缺乏对于中国社会与中国革命问题的深刻认识，还不善于将马克思列宁主义的基本原理与中国革命的时间结合起来，同时幼年的中国共产党还难以摆脱共产国际的那些错误的指导思想，导致了右倾机会主义 在大革命后期在中共领导机关中占据了通知地位</li></ul></li></ul><hr><h4 id="北伐"><a href="#北伐" class="headerlink" title="北伐"></a>北伐</h4><p><em>关于北伐与大革命的说明</em></p><blockquote><p>观点一(来源：维基百科)</p><p><strong>国民革命军北伐</strong>，又称<strong>国民政府北伐</strong>、<strong>中国国民党北伐</strong>、<strong>国民大革命</strong></p><p>观点二（来源：腾讯新闻）</p><p>这场“大革命”，包括政治革命和社会革命两个部分，前者指的是通过军事北伐推翻北洋军阀政权；后者则是指工、农群众运动。前者大致上处在国民党的控制之下；后者则完全由中共包办。</p></blockquote><h5 id="时间-3"><a href="#时间-3" class="headerlink" title="时间"></a>时间</h5><ul><li>1926年7月</li></ul><h5 id="内容-3"><a href="#内容-3" class="headerlink" title="内容"></a>内容</h5><ul><li>国民革命军 vs 北洋军阀吴佩孚、孙传芳、张作霖</li><li>目标：推翻北洋军阀统治</li></ul><h5 id="意义-3"><a href="#意义-3" class="headerlink" title="意义"></a>意义</h5><ul><li>随着北伐的胜利进军，中国形成了历史上空前广大的人民解放运动。</li><li>帝国主义、封建主义的统治收到了严重的打击。</li><li>1925年至1927年的中国反帝反封建的革命，比之以往任何一次革命，包括辛亥革命和五四运动，群众的动员程度更为广泛，斗争的规模更为宏伟，革命的社会内涵更为深刻，因此被称作大革命。</li><li>这场失败的革命，实际上是迎接未来革命胜利的一次伟大演习。因为正是在这个时期，中国共产党人开始探索马克思主义中国化的途径，初步提出了无产阶级领导的、人民大众的、反帝反封建的新民主主义革命的基本思想，并且从大革命的失败中汲取了严重的历史教训，开始懂得进行土地革命和掌握革命武装的重要性。也正是由于经历了这场大革命，中国人民的觉悟程度和组织程度有了明显的提高，中国共产党开始掌握了一部分革命武装。所有这些，为把中国革命推进到一个新的阶段——土地革命战争阶段准备了必要的条件。</li></ul><h5 id="大革命中的中国共产党"><a href="#大革命中的中国共产党" class="headerlink" title="大革命中的中国共产党"></a>大革命中的中国共产党</h5><ul><li>大革命实在反对帝国主义、反对军阀的政治口号下进行的，而提出这个口号的正是中国共产党。</li><li>大革命是在以国共合作为基础的统一战线的组织形式线下进行的，而中国共产党也是国共合作的倡导者与统一战线的组织者</li><li>大革命是近代中国历史上空前广发而深刻的群众运动，而中国共产党是人民群众的主要发动者与组织者</li><li>大革命的主要斗争形式是革命战争，共产党人不仅帮助与推动了国民革命军的建立并进行了卓有成效的政治工作，并在战斗中身先士卒起到了先锋作用与表率作用。</li></ul><hr><h4 id="南昌起义"><a href="#南昌起义" class="headerlink" title="南昌起义"></a>南昌起义</h4><p>南昌起义指在1927年8月1日以周恩来为书记等率领共产党掌握或者影响下的北伐军2万多人在南昌举行的武装起义，这次起义打响了武装反抗国民党反动统治的第一枪，是中国共产党独立领导革命战争、创建人民军队和武装夺取政权的开端。</p><hr><h4 id="伪满政权"><a href="#伪满政权" class="headerlink" title="伪满政权"></a>伪满政权</h4><p>1931年日本占领了东北后，开始了对东北长达14年的殖民统治。</p><p>伪满洲国（1932年3月1日－1945年8月18日），是日本占领中国东北三省后，所扶植的一个傀儡伪政权。因国民政府和中共及国际社会对伪满政权均不予承认，故被称作“伪满洲国”（まんしゅうこく（嗯，假装自己有文化的样子））或“伪满”。</p><p>这是<strong><code>日本军国主义侵略势力与中国封建复辟残余势力相结合而催生出来的一个怪胎</code></strong>，其在“日满共同防卫”的借口下，确认日本在东北的一切权益</p><p>“伪满洲国”初期为“共和”体制，不久后以立清废帝溥仪为“元首”，初期称号为“执政”，两年后改称“皇帝”</p><hr><h4 id="抗争初期-上海-八百壮士"><a href="#抗争初期-上海-八百壮士" class="headerlink" title="抗争初期 上海 八百壮士"></a>抗争初期 上海 八百壮士</h4><p>八百壮士指的是在1937年10月26日淞沪会战中，第88师第524团团附谢晋元率孤军据守四行仓库，被上海市民誉为“八百壮士”。</p><blockquote><p>来源：百度百科</p><p>（P.S. 在一部分近代史应试上，百度百科真的比维基棒太多了！）</p><p>1937年8月13日，日军大举进攻上海(八一三事变)。战役进行到最后阶段，10月26日晚，守卫大场防线的中华民国国民革命军陆军第88师第524团400余人(报界宣传称“八百壮士”)，在副团长谢晋元指挥下，奉命据守苏州河北岸的四行仓库。 在日军的重重包围下，守卫四行仓库的“八百壮士”孤军奋战4昼夜。战至30日，接到撤退命令后，他们冲出重围，退入公共租界，困守孤军营。</p><p>一直到27日凌晨3点，从前线撤退到四行仓库参加掩护的共计420人，为了迷惑敌人，谢晋元对外仍用团的番号称有800人，八百壮士由此得名。</p></blockquote><hr><blockquote><p><strong>打开支付宝首页搜“627112961”领红包，领到大红包的小伙伴赶紧使用哦！</strong></p></blockquote><p><img src="/2018/12/28/近代史复习/D:/Git\blog\blog\source\_posts\近代史复习\hb1.jpg" style="zoom:50%"></p><p>考题回忆</p><p>1.名词解释6*5</p><p>天朝田亩制度     八百壮士   马关条约   北伐    领事裁判权</p><p>2.简答 15*2</p><p>1）洋务运动的作用</p><p>2）中国参与一战 的原因与形式</p><p>3.论述 40</p><p>国共第一次合作的过程</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;开坑开坑 ，一日一更，大概一天三到四个知识点的样子似乎刚刚好卡到考试前&lt;/p&gt;
&lt;p&gt;文中引用部分为&lt;a href=&quot;https://mengzelev.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;mengzelev&lt;/a&gt;与&lt;a 
      
    
    </summary>
    
    
      <category term="-review" scheme="http://shelah-kuang.github.io/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>矩阵计算</title>
    <link href="http://shelah-kuang.github.io/2018/12/15/%E7%9F%A9%E9%98%B5%E8%AE%A1%E7%AE%97/"/>
    <id>http://shelah-kuang.github.io/2018/12/15/矩阵计算/</id>
    <published>2018-12-15T14:47:37.000Z</published>
    <updated>2018-12-19T12:24:18.480Z</updated>
    
    <content type="html"><![CDATA[<p>这一章  毫无打字的想法  最讨厌打公式了的说(╯°Д°)╯︵┻━┻</p><h3 id="28-1-求解线性方程组"><a href="#28-1-求解线性方程组" class="headerlink" title="28.1 求解线性方程组"></a>28.1 求解线性方程组</h3><p>对于线性方程组，设$A=(a_{ij}),x=(x_i),b=(b_i)$,记为   $Ax=b$, 若A为非奇异矩阵，则其具有逆向量，于是$x=A^{-1}b$ 是其解向量。若A的秩为n， 若方程数目少于n，则其是<strong><code>欠定的</code></strong>，若多于，则为<strong><code>超定的</code></strong></p><h6 id="LUP分解综述"><a href="#LUP分解综述" class="headerlink" title="LUP分解综述"></a>LUP分解综述</h6><p>LUP分解就是要找到三个$n \times n$ 的矩阵L,U,P，从而满足 $PA=LU$, 其中L是一个单位下三角矩阵，U是一个上三角矩阵，P是一个置换矩阵。满足要求的L,U,P被称为是矩阵A的<strong><code>LUP分解</code></strong>，每一个非奇异矩阵A都有这样一种分解。</p><p>求解Ax=b时，将其转化为$LUx=Pb$,  进而设$y=Ux$,  通过<strong><code>正向替换</code></strong>的方法求解下三角系统$Ly=Pb$ 得到未知向量y,  然后通过一种<strong><code>反向替换</code></strong>的方法来求解上三角系统$Ux=y$ 得到未知向量x，此时的x就是解向量。</p><h5 id="正向替换与反向替换"><a href="#正向替换与反向替换" class="headerlink" title="正向替换与反向替换"></a>正向替换与反向替换</h5><p><img src="/2018/12/15/矩阵计算/D:/blogpic\jzjs-1.png" alt="jzjs-1">                            </p><p>重写等式，替换，代入。</p><p><img src="/2018/12/15/矩阵计算/D:/blogpic\jzjs-2.png" alt="jzjs-2"></p><p>上算法中，我们假定维数n出现在属性L.rows中，置换矩阵P使用数组$\pi$表示</p><p><strong>计算一个LU分解</strong></p><p>分解$A=LU$, 我们利用<strong><code>高斯消元法</code></strong>来创建一个LU分解</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这一章  毫无打字的想法  最讨厌打公式了的说(╯°Д°)╯︵┻━┻&lt;/p&gt;
&lt;h3 id=&quot;28-1-求解线性方程组&quot;&gt;&lt;a href=&quot;#28-1-求解线性方程组&quot; class=&quot;headerlink&quot; title=&quot;28.1 求解线性方程组&quot;&gt;&lt;/a&gt;28.1 求解线
      
    
    </summary>
    
    
      <category term="-CLRS" scheme="http://shelah-kuang.github.io/tags/CLRS/"/>
    
  </entry>
  
  <entry>
    <title>平面图与图着色</title>
    <link href="http://shelah-kuang.github.io/2018/12/11/%E5%B9%B3%E9%9D%A2%E5%9B%BE%E4%B8%8E%E5%9B%BE%E7%9D%80%E8%89%B2/"/>
    <id>http://shelah-kuang.github.io/2018/12/11/平面图与图着色/</id>
    <published>2018-12-11T08:09:50.000Z</published>
    <updated>2018-12-14T14:37:32.679Z</updated>
    
    <content type="html"><![CDATA[<h3 id="CZ-9-1-平面图"><a href="#CZ-9-1-平面图" class="headerlink" title="CZ 9.1 平面图"></a>CZ 9.1 平面图</h3><p>若G<strong>能够</strong>花在一个平面上使得任何两条边都不交叉，称G为一个<strong><code>平面图(planar graph)</code></strong>，若G<strong>已经</strong>被画在了一个平面上，且任意两条边不交叉，则称G为    <strong><code>平图(plane graph)</code></strong>。</p><p>一个平图把平面分为一些连通片，这些连通片被称为<strong><code>区域(regions)</code></strong>, 在每个平图中总有一个区域是无界的，该区域称为<strong>外区域</strong>，在一个平图中，顶点与边都与某个给定区域R相关联的子图称为是R的<strong><code>边界</code></strong>.</p><blockquote><p>如果G是一个至少含有三条边的连通平图，则G的每个区域的边界至少有三条边</p></blockquote><blockquote><p><strong>定理9.1 Euler恒等式 </strong>：</p><p>如果G是一个阶为n，边数为m且含有r个区域的连通平图，则n-m+r = 2</p></blockquote><p>​     [最小反例证法]</p><p>​     –&gt; 若G是树，显然成立</p><p>​    —&gt; 若G不是树，取一个含有最小边数且不满足Euler等式的图G，则存在一不是割边的边e，而G-e满足Euler等式，…</p><blockquote><p><strong>定理9.2</strong></p><p>如果G是一个阶为$n\geq 3$且边数为m的平面图，则有$m\leq 3n-6$</p></blockquote><p>​    [直接证法] 计算每个区域的边数之和，割边只计算一次，非割边将计数两次，利用欧拉恒等式构建</p><p>可以利用定理9.2证明有些图不是平面的</p><blockquote><p><strong>推论9.3</strong></p><p>每个平面图都含有一个度小于或等于5的顶点</p></blockquote><p>​    [逆否证法] </p><blockquote><p><strong>推论9.4</strong></p><p>完全图$K_5$是非平面的</p></blockquote><p>若G是平面的，且在G的任意两个不邻接的顶点之间添加一条边就可以产生一个非平面，则称G 是<strong><code>极大平面的(maximal planar)</code></strong>，另一种表述形式是：若G是平面的，但G不是其他任何平面图的一个生成子图</p><blockquote><p><strong>定理9.5</strong></p><p>图$K_{3,3}$是非平面的</p></blockquote><p>​    [反证法] 利用欧拉恒等式，求出其区域数是5，然后计算每个区域的边数之和为2m，再根据其每个区域都不是三角形得出其边数和大于20，即$m\geq 10$,与m值矛盾   </p><p>如果有一个或者多个度为2的顶点插入到了G的一条或者多条边中，则称G‘是G的一个<strong><code>细分(subdivision)</code></strong>    </p><blockquote><p><strong>定理9.7 Kuratowski定理</strong></p><p>一个图G是平面的当且仅当G不含$K_5，K_{3，3}$，或者是$K_5，K_{3，3}$的一个细分作为子图</p></blockquote><h3 id="CZ-10-1-顶点染色"><a href="#CZ-10-1-顶点染色" class="headerlink" title="CZ 10.1 顶点染色"></a>CZ 10.1 顶点染色</h3><p>地图的<strong><code>对偶</code></strong>是指将一个地图上的一个区域视为图G中的一个点，区域相邻即对应的两个顶点是邻接的，每张地图的对偶都是平面图</p><p>图的一个<strong><code>真染色(proper coloring)</code></strong>,或简称为<strong><code>染色(coloring)</code></strong>，指的是给图G每个顶点分配颜色且邻接顶点颜色不同，在所有染色中，使用颜色最少的颜色数称为是<strong><code>色数(chromatic number)</code></strong>, 记为<strong>$\chi (G)$</strong>, 若能用k中颜色的集合给G染色，则称G是<strong><code>k可染色的(k-colorable)</code></strong>,若$\chi(G)=k$,则也称G是<strong><code>k色的(k-chromatic)</code></strong>的，且G的每个k染色都是G的<strong><code>最小染色(minimum coloring)</code></strong></p><blockquote><p><strong>定理10.1 四色定理</strong></p><p>每个平面图的色数至多是4</p></blockquote><p>$\chi(G)=1$当且仅当$G \cong \overline{K_n}$(n阶空图)</p><p>若顶点集 S中任意两个顶点不邻接，则称其是独立的，最大独立集的点独立数记为$\alpha(G)$,</p><p>若G是一个k色图，则可以把V(G)划分为k个独立集，此时这些独立集被称为<strong><code>色类(color classes)</code></strong></p><blockquote><p><strong>定理10.2</strong></p><p>图G的色数是2当且仅当G是一个非空的二部图</p></blockquote><p>又由定理1.12，图G是二部的当且仅当没有奇圈，故而若图G有奇圈，则$\chi(G)\geq 3$</p><p>图G的一个<strong><code>团(clique)</code></strong>是指G的一个完全子图，图G中最大团的阶数被称为是G的<strong><code>团数(clique number)</code></strong>,记为$\omega(G)$.</p><p>事实上，我们有$\alpha(G)=k$ 当且仅当 $\omega(\overline{G})=k$</p><blockquote><p><strong>定理10.5 </strong></p><p>对于每个n阶图G，我们都有</p><p>​        $\chi(G)\geq\omega(G)$,  $\chi(G)\geq \frac{n}{\alpha(G)}$</p></blockquote><blockquote><p><strong>定理10.7</strong></p><p>对于每个图G，我们都有$\chi(G)\leq 1+\Delta(G)$      (其中$\Delta(G)$表示的是图G的最大度)</p></blockquote><blockquote><p><strong>定理10.8   Brooks定理</strong></p><p>对于每个非奇圈也非完全的连通图G，有$\chi(G)\leq\Delta(G)$</p></blockquote><blockquote><p><strong>定理10.9</strong></p><p>对于每个图G，</p><p>​                $\chi(G)\leq 1+max{\delta(H)}$        （$\delta(G)$表示G的最小度）</p><p>其中max取遍G的所有诱导子图H</p></blockquote><p>图G的<strong><code>影子图(shadow graph)</code></strong>S(G) 是指通过在G中，对每个顶点v，增加一个顶点v’，称为v的<strong><code>影子顶点(shadow vertex)</code></strong>，并连接v’在v中的所有邻点所得到的图（此时v不与原本G中对应的邻点相连）</p><blockquote><p><strong>定理 10.10</strong></p><p>对于每个整数$k\geq 3$,都存在 一个色数为k的无三角的图</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;CZ-9-1-平面图&quot;&gt;&lt;a href=&quot;#CZ-9-1-平面图&quot; class=&quot;headerlink&quot; title=&quot;CZ 9.1 平面图&quot;&gt;&lt;/a&gt;CZ 9.1 平面图&lt;/h3&gt;&lt;p&gt;若G&lt;strong&gt;能够&lt;/strong&gt;花在一个平面上使得任何两条边都不交
      
    
    </summary>
    
    
      <category term="-CZ -图论" scheme="http://shelah-kuang.github.io/tags/CZ-%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>最大流</title>
    <link href="http://shelah-kuang.github.io/2018/12/03/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    <id>http://shelah-kuang.github.io/2018/12/03/最大流/</id>
    <published>2018-12-03T14:25:33.000Z</published>
    <updated>2018-12-07T13:18:18.357Z</updated>
    
    <content type="html"><![CDATA[<p><em>终于…重新开始写blog了，先挖个坑，等看完慢慢补一下….(这个没写完。。只是更新了一下网站界面)</em></p><p><em>2018.12.7</em></p><p><em>后悔挖坑了，笔记做的太痛苦了</em></p><p>在不违背任何容量限制的情况下，计算从源节点运送物料到汇点的最大速率</p><p><strong>26.1</strong></p><p>流网络：有向图，每条边有一个非负的容量值c，如果边集合包括（u，v），则不包括（v,u）。</p><p>源节点s，汇点 t.</p><p>容量限制：0 ≤ f(u,v) ≤ c(u,v)</p><p>流量守恒：入 = 出</p><p>定义<br>$$<br>|f|=\sum_{v \in V}f(s,v)-\sum_{v \in V}f(v,s)<br>$$<br>如果要用反平行边来模拟一个流问题，必须将其转化为一个等价但是不包括平行边的网络，方式是在两点间新加入一个节点，该节点与 两点的容量与原容量相同。</p><p>对于具有多个源节点和汇点的网络，可以构建一个超级源结点（连接每一个源节点并设置容量c为无穷）和一个超级汇点（连接每一个汇点并设置容量c为无穷）</p><p><strong>26.2   Ford-Fulkerson方法</strong></p><p>给定流网络G 和流量f，残存网络G_f由那些仍有空间对流量进行调整的边构成。设置<strong>残存容量</strong></p><p>$$<br>c_f(u,v)=<br>\begin{cases}<br>c(u,v)-f(u,v)&amp; (u,v)\in E\<br>f(v,u)&amp; (v,u) \in E \<br>0&amp;其他<br>\end{cases}<br>$$<br>若一条边残存容量为0，则其不属于残存网络</p><p>残存网络中的边可能是G中不存在的边，因为我们要增加总流量，所以可能消减某些正向边的流量，为此我们设置一个反向边与其抵消达到消减操作。</p><p><em>TODO() ：公式很定义好长，..做完PA回来打</em></p><p>增广路径p是残存网络中一条从源节点s到汇点t的简单路径。</p><p>称一条增广路径上能够为每条边增加的流量的最大值为p的<strong>残存容量</strong></p><p><em>TODO( )：懒癌发作了</em></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;终于…重新开始写blog了，先挖个坑，等看完慢慢补一下….(这个没写完。。只是更新了一下网站界面)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2018.12.7&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;后悔挖坑了，笔记做的太痛苦了&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;在不违背任何容量限制的情况下
      
    
    </summary>
    
    
      <category term="CLRS" scheme="http://shelah-kuang.github.io/tags/CLRS/"/>
    
  </entry>
  
  <entry>
    <title>暑假半期总结</title>
    <link href="http://shelah-kuang.github.io/2018/08/06/%E6%9A%91%E5%81%87%E5%8D%8A%E6%9C%9F%E6%80%BB%E7%BB%93/"/>
    <id>http://shelah-kuang.github.io/2018/08/06/暑假半期总结/</id>
    <published>2018-08-06T12:06:07.000Z</published>
    <updated>2018-12-15T15:39:40.735Z</updated>
    
    <content type="html"><![CDATA[<p>  暑假已经过半，在此对过去的半个暑期的生活做一个简短的总结：<br>首先是原先<strong>预计的计划</strong>计划执行情况：</p><ul><li style="list-style: none"><input type="checkbox"> 线性代数</li><li style="list-style: none"><input type="checkbox"> 概率论 </li><li style="list-style: none"><input type="checkbox"> python</li><li style="list-style: none"><input type="checkbox"> 数据结构基础</li><li style="list-style: none"><input type="checkbox"> 托福考试准备</li><li style="list-style: none"><input type="checkbox"> csapp自学及习题练习</li><li><p>[ ] 减肥</p><p>事实证明，最后几乎<strong>没有进行任何事情</strong>，绝大多数内容仅仅只是开了一个头，在此对过去的失误进行一个反思：</p></li></ul><p><strong>1.惯于拖延，而不知行动。</strong><br>总是想着明天开始吧，明天开始也不迟，最后总是拖延至明天，而又往往容易因为外物所干扰，导致事情一拖再拖，事情难以进行开始。以减肥为例，开始的几天里坚持的非常不错，但是因为一次要交汇编作业导致没时间只能敷衍运动后，之后便逐渐减量，想着今天随便练练，明天再继续加量健身，最终导致不仅没瘦，运动量消耗的还不如吃的零食的热量。值得注意的是，该例子的起因汇编作业也是由于拖延而导致的。<br><strong>2.惯于新鲜，而不知坚持</strong><br>往往对于事情热衷于开始，以python学习为例，搜集下载了很多资料，导致时间往往浪费在搜集资料上面，形成了一种虚拟的满足感，而大多数资料往往仅看了一个开头，导致一样东西对开头段往往特别熟悉因为看过这个开头的很多版本，而对后面的东西一无所知，沉浸在了舒适区之内。<br><strong>3.惯于虚事，而不知先后</strong><br>由于计划铺的太大，很多时候往往面对学什么而不知所措。没有先后顺序，很多时候这个东西学个几十分钟觉得没意思好像另一个东西更有趣，就去学另一个东西。感觉自己越来越缺少一种长时间学习某一样事情的毅力。这也就导致看似做了很多事情，但是却都很浅，很浮，很虚。<br><strong>4.惯于娱乐，而不知学习</strong><br>这种心态其实从高三开始就一直就有。就是对于一个人的具体生活状态的认知，总是认为一个人如果只想着学习，那该是一个多么无趣的生活。其实这种观念现在我还是认为是正确的。生活必须得要有点有意思的事情。但是问题就在于自己往往以此为借口而不知学习。<strong>娱乐太多而学习太少</strong>，总是看似干了很多事情之后就觉得差不多了该休息休息，导致往往以玩游戏或者看视频结束一天的生活。<br><strong>….</strong><br>悟已往之不谏，知来者之可追。在后面的半个暑假中，希望自己能够分清轻重缓急，合理制定计划，分配时间，至少完成既定计划的一部分，为避免不知所措，各任务优先级与紧急程度如下：<br>托福学习与单词背诵：每日至少背诵300词 + 3道以上托福题之后再进行余下任务<br>汇编语言学习：非作业阶段每天一周视频或作业，非作业阶段每天复习一章或10道习题后  再进行余下任务<br>线性代数：每天看完课本20页后再进行余下任务<br>托福战团打卡：每天打卡后进行余下任务<br>数据结构基础：3个视频后再完成余下任务<br>python：教材30页后再完成余下任务<br>以上任务1.2必须进行，其余任务视当天时间与情况而进行酌情修改调整。<br>除此之外，每日必须完成30min+徒手健身<br><strong>自己常常在一群很优秀的人中间，却常常误以为自己也成了其中的一员</strong>，希望自己能够调整状态，跟上大佬们的步伐，以保证自己不会落下太多。先想着追赶吧，加油！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;  暑假已经过半，在此对过去的半个暑期的生活做一个简短的总结：&lt;br&gt;首先是原先&lt;strong&gt;预计的计划&lt;/strong&gt;计划执行情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;checkbox&quot;&gt; 线性代数&lt;
      
    
    </summary>
    
    
      <category term="-个人总结" scheme="http://shelah-kuang.github.io/tags/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://shelah-kuang.github.io/2018/07/30/hello-world/"/>
    <id>http://shelah-kuang.github.io/2018/07/30/hello-world/</id>
    <published>2018-07-30T02:30:46.491Z</published>
    <updated>2017-10-28T00:39:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
